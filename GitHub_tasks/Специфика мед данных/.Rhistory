qqplot_34 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание витамина Е,мкг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания витамина Е") +
theme_classic()
qqplot_35 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание витамина К,мкг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания витамина К") +
theme_classic()
ggarrange(qqplot_1, qqplot_2, qqplot_3, qqplot_4, qqplot_5, qqplot_6)
ggarrange(qqplot_7, qqplot_8, qqplot_9, qqplot_10, qqplot_11, qqplot_12)
ggarrange(qqplot_13, qqplot_14, qqplot_15, qqplot_16, qqplot_17, qqplot_18)
ggarrange(qqplot_19, qqplot_20, qqplot_21, qqplot_22, qqplot_23, qqplot_24)
ggarrange(qqplot_25, qqplot_26, qqplot_27, qqplot_28, qqplot_29, qqplot_30)
ggarrange(qqplot_31, qqplot_32, qqplot_33, qqplot_34, qqplot_35)
qqplot_1 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание альфа-каротина,мкг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания альфа-каротина") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_2 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание бетта-каротина,мкг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания бетта-каротина") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_3 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание бетта-криптоксантина,мкг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания бетта-криптоксантина") +
theme_classic()+
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_4 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание углеводов, г`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания углеводов") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_5 <-  cleaned_data %>%
ggplot(aes(sample = `Уровень холестерина, мг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n уровеня холестерина") +
theme_classic()+
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_6 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание холина,мг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания холина") +
theme_classic()+
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_7 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание клетчатки,г`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания клетчатки") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_8 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание лютеина и зеаксантина,мкг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания лютеина и зеаксантина") +
theme_classic()+
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_9 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание ликопина,мкг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания ликопина") +
theme_classic()+
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_10 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание неацина,мг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания неацина") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_11 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание белка,г`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания белка") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_12 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание ретинола,мкг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания ретинола") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_13 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание рибофлавина,мг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания рибофлавина") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_14 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание селена,мкг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания селена") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_15 <-  cleaned_data %>%
ggplot(aes(sample = `Общее количество сахара,Г`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения содержания \n общего количества сахара") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_16 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание тиамина,мг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания тиамина") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_17 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание воды,г`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания воды") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_18 <-  cleaned_data %>%
ggplot(aes(sample = `Мононасыщенные жиры,г`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения содержания \n мононасыщенных жиров") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_19 <-  cleaned_data %>%
ggplot(aes(sample = `Полинасыщенные жиры,г`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения содержания \n полинасыщенных жиров") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_20 <-  cleaned_data %>%
ggplot(aes(sample = `Насыщенные жиры,г`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения содержания \n насыщенных жиров") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_21 <-  cleaned_data %>%
ggplot(aes(sample = `Общее содержание липидов,г`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения общего \n содержания липидов,г") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_22 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание кальция,мг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания кальция") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_23 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание меди,мг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания меди") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_24 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание железа,мг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания железа") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_25 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание магния,мг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания магния") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_26 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание фосфора,мг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания фосфора") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_27 <-  cleaned_data %>%
ggplot(aes(sample = `Содержания калия,мг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания калия") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_28 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание натрия,мг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания натрия") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_29 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание цинка,мг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания цинка") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_30 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание витамина А,мкг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания витамина А") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_31 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание витамина В12,мкг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания витамина В12") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_32 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание витамина В6,мкг `)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания витамина В6") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_33 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание витамина С,мкг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания витамина С") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_34 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание витамина Е,мкг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания витамина Е") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
qqplot_35 <-  cleaned_data %>%
ggplot(aes(sample = `Содержание витамина К,мкг`)) +
stat_qq() +
stat_qq_line(color = "blue") +
labs(x = "Теоретические квантили", y = "Наблюдаемые квантили")+
ggtitle("QQ-график распределения \n содержания витамина К") +
theme_classic() +
theme(plot.title = element_text(size = 10),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9))
ggarrange(qqplot_1, qqplot_2, qqplot_3, qqplot_4, qqplot_5, qqplot_6)
ggarrange(qqplot_7, qqplot_8, qqplot_9, qqplot_10, qqplot_11, qqplot_12)
ggarrange(qqplot_13, qqplot_14, qqplot_15, qqplot_16, qqplot_17, qqplot_18)
ggarrange(qqplot_19, qqplot_20, qqplot_21, qqplot_22, qqplot_23, qqplot_24)
ggarrange(qqplot_25, qqplot_26, qqplot_27, qqplot_28, qqplot_29, qqplot_30)
ggarrange(qqplot_31, qqplot_32, qqplot_33, qqplot_34, qqplot_35)
Rice <- cleaned_data %>%
select(c(`Категория продуктов`, `Содержание витамина А,мкг` )) %>%
group_by(`Категория продуктов`) %>%
filter(`Категория продуктов` == 'Rice')
Cookie <- cleaned_data %>%
select(c(`Категория продуктов`, `Содержание витамина А,мкг` )) %>%
group_by(`Категория продуктов`) %>%
filter(`Категория продуктов` == 'Cookie')
wilcox.test(Rice$`Содержание витамина А,мкг`, Cookie$`Содержание витамина А,мкг`, paired = FALSE)
cleaned_data %>%
group_by(`Категория продуктов`)
cleaned_data %>%
select(!c(Идентификатор, `Описание продукта`)) %>%
group_by(`Категория продуктов`)
cleaned_data %>%
select(!c(Идентификатор, `Описание продукта`)) %>%
group_by(`Категория продуктов`) %>%
summarise(across(where(is.numeric),
~ list(wilcox.test(.)),
.names = "wilcox_{col}")) %>%
pivot_longer(-treat,
names_to = c(".value", "variable"),
names_sep = "_") %>%
mutate(w_wilcox = map_dbl(wilcox.test, ~ .x$statistic),
p_value = map_dbl(wilcox.test, ~ .x$p.value))
cleaned_data %>%
select(!c(Идентификатор, `Описание продукта`)) %>%
group_by(`Категория продуктов`) %>%
summarise(across(where(is.numeric),
~ list(wilcox.test(.)),
.names = "wilcox_{col}")) %>%
pivot_longer(-`Категория продуктов`,
names_to = c(".value", "variable"),
names_sep = "_") %>%
mutate(w_wilcox = map_dbl(wilcox.test, ~ .x$statistic),
p_value = map_dbl(wilcox.test, ~ .x$p.value))
cleaned_data %>%
select(!c(Идентификатор, `Описание продукта`)) %>%
group_by(`Категория продуктов`) %>%
summarise(across(where(is.numeric),
~ list(wilcox.test(.)),
.names = "wilcox_{col}")) %>%
pivot_longer(`Категория продуктов`,
names_to = c(".value", "variable"),
names_sep = "_") %>%
mutate(w_wilcox = map_dbl(wilcox.test, ~ .x$statistic),
p_value = map_dbl(wilcox.test, ~ .x$p.value))
cleaned_data %>%
select(!c(Идентификатор, `Описание продукта`)) %>%
group_by(`Категория продуктов`) %>%
pivot_longer(`Категория продуктов`)
cleaned_data %>%
select(!c(Идентификатор, `Описание продукта`)) %>%
group_by(`Категория продуктов`) %>%
pivot_longer(!`Категория продуктов`)
cleaned_data %>%
select(!c(Идентификатор, `Описание продукта`)) %>%
group_by(`Категория продуктов`) %>%
pivot_longer(!`Категория продуктов`) %>%
map(function(x) x %>% wilcox.test() %>% .$p.value %>% `<`(0.05)) %>%
enframe() %>%
mutate(across(value, function(x) ifelse(value == TRUE, "Распределение отлично от нормального", "Распределение нормальное")))
library(gtsummary)
cleaned_data %>%
select(`Категория продуктов`,
`Содержание альфа-каротина,мкг`,
`Содержание бетта-каротина,мкг`,
`Содержание бетта-криптоксантина,мкг`) %>%
tbl_summary(by = `Категория продуктов`) %>%
add_p()
cleaned_data %>%
select(`Категория продуктов`,
`Содержание альфа-каротина,мкг`,
`Содержание бетта-каротина,мкг`,
`Содержание бетта-криптоксантина,мкг`) %>%
tbl_summary(by = `Категория продуктов`) %>%
add_p()
Rice <- cleaned_data %>%
select(`Категория продуктов` = 'Rice')
Rice <- cleaned_data %>%
select(`Категория продуктов` == 'Rice')
Rice <- cleaned_data %>%
filter(`Категория продуктов` == 'Rice')
Cookie <- cleaned_data %>%
filter(`Категория продуктов` == 'Cookie')
wilcox.test(Rice$`Содержание витамина А,мкг`, Cookie$`Содержание витамина А,мкг`, paired = FALSE)
Rice <- cleaned_data %>%
filter(`Категория продуктов` == 'Rice')
Cookie <- cleaned_data %>%
filter(`Категория продуктов` == 'Cookie')
wilcox.test(Rice$`Содержание витамина А,мкг`, Cookie$`Содержание витамина А,мкг`, paired = FALSE)
wilcox.test(Rice$`Содержание альфа-каротина,мкг`, Cookie$`Содержание альфа-каротина,мкг`, paired = FALSE)
wilcox.test(Rice$`Содержание бетта-каротина,мкг`, Cookie$`Содержание бетта-каротина,мкг`, paired = FALSE)
wilcox.test(Rice$`Содержание бетта-криптоксантина,мкг`, Cookie$`Содержание бетта-криптоксантина,мкг`, paired = FALSE)
wilcox.test(Rice$`Содержание углеводов, г`, Cookie$`Содержание углеводов, г`, paired = FALSE)
wilcox.test(Rice$`Уровень холестерина, мг`, Cookie$`Уровень холестерина, мг`, paired = FALSE)
Rice <- cleaned_data %>%
filter(`Категория продуктов` == 'Rice')
Cookie <- cleaned_data %>%
filter(`Категория продуктов` == 'Cookie')
wilcox.test(Rice$`Содержание витамина А,мкг`, Cookie$`Содержание витамина А,мкг`, paired = FALSE)
wilcox.test(Rice$`Содержание альфа-каротина,мкг`, Cookie$`Содержание альфа-каротина,мкг`, paired = FALSE)
wilcox.test(Rice$`Содержание бетта-каротина,мкг`, Cookie$`Содержание бетта-каротина,мкг`, paired = FALSE)
wilcox.test(Rice$`Содержание бетта-криптоксантина,мкг`, Cookie$`Содержание бетта-криптоксантина,мкг`, paired = FALSE)
wilcox.test(Rice$`Содержание углеводов, г`, Cookie$`Содержание углеводов, г`, paired = FALSE)
wilcox.test(Rice$`Уровень холестерина, мг`, Cookie$`Уровень холестерина, мг`, paired = FALSE)
wilcox.test(Rice$`Содержание холина,мг`, Cookie$`Содержание холина,мг`, paired = FALSE)
wilcox.test(Rice$`Содержание клетчатки,г`, Cookie$`Содержание клетчатки,г`, paired = FALSE)
wilcox.test(Rice$`Содержание лютеина и зеаксантина,мкг`, Cookie$`Содержание лютеина и зеаксантина,мкг`, paired = FALSE)
wilcox.test(Rice$`Содержание ликопина,мкг`, Cookie$`Содержание ликопина,мкг`, paired = FALSE)
wilcox.test(Rice$`Содержание неацина,мг`, Cookie$`Содержание неацина,мг`, paired = FALSE)
wilcox.test(Rice$`Содержание белка,г`, Cookie$`Содержание белка,г`, paired = FALSE)
wilcox.test(Rice$`Содержание ретинола,мкг`, Cookie$`Содержание ретинола,мкг`, paired = FALSE)
wilcox.test(Rice$`Содержание рибофлавина,мг`, Cookie$`Содержание рибофлавина,мг`, paired = FALSE)
wilcox.test(Rice$`Содержание селена,мкг`, Cookie$`Содержание селена,мкг`, paired = FALSE)
wilcox.test(Rice$`Общее количество сахара,Г`, Cookie$`Общее количество сахара,Г`, paired = FALSE)
wilcox.test(Rice$`Содержание тиамина,мг`, Cookie$`Содержание тиамина,мг`, paired = FALSE)
wilcox.test(Rice$`Содержание воды,г`, Cookie$`Содержание воды,г`, paired = FALSE)
wilcox.test(Rice$`Мононасыщенные жиры,г`, Cookie$`Мононасыщенные жиры,г`, paired = FALSE)
wilcox.test(Rice$`Полинасыщенные жиры,г`, Cookie$`Полинасыщенные жиры,г`, paired = FALSE)
wilcox.test(Rice$`Насыщенные жиры,г`, Cookie$`Насыщенные жиры,г`, paired = FALSE)
wilcox.test(Rice$`Общее содержание липидов,г`, Cookie$`Общее содержание липидов,г`, paired = FALSE)
wilcox.test(Rice$`Содержание кальция,мг`, Cookie$`Содержание кальция,мг`, paired = FALSE)
wilcox.test(Rice$`Содержание меди,мг`, Cookie$`Содержание меди,мг`, paired = FALSE)
wilcox.test(Rice$`Содержание железа,мг`, Cookie$`Содержание железа,мг`, paired = FALSE)
wilcox.test(Rice$`Содержание магния,мг`, Cookie$`Содержание магния,мг`, paired = FALSE)
wilcox.test(Rice$`Содержание фосфора,мг`, Cookie$`Содержание фосфора,мг`, paired = FALSE)
wilcox.test(Rice$`Содержания калия,мг`, Cookie$`Содержания калия,мг`, paired = FALSE)
wilcox.test(Rice$`Содержание натрия,мг`, Cookie$`Содержание натрия,мг`, paired = FALSE)
wilcox.test(Rice$`Содержание цинка,мг`, Cookie$`Содержание цинка,мг`, paired = FALSE)
wilcox.test(Rice$`Содержание витамина А,мкг`, Cookie$`Содержание витамина А,мкг`, paired = FALSE)
wilcox.test(Rice$`Содержание витамина В12,мкг`, Cookie$`Содержание витамина В12,мкг`, paired = FALSE)
wilcox.test(Rice$`Содержание витамина В6,мкг `, Cookie$`Содержание витамина В6,мкг `, paired = FALSE)
wilcox.test(Rice$`Содержание витамина С,мкг`, Cookie$`Содержание витамина С,мкг`, paired = FALSE)
wilcox.test(Rice$`Содержание витамина Е,мкг`, Cookie$`Содержание витамина Е,мкг`, paired = FALSE)
wilcox.test(Rice$`Содержание витамина К,мкг`, Cookie$`Содержание витамина К,мкг`, paired = FALSE)
